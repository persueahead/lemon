1.Spring的描述
   1）Spring就是一个开源的一个设计层面的框架
      主要进行处理业务逻辑层和其他各层之间松耦合性的问题，
      是一个面向对象的一个编程思想进行贯穿到整个项目中的
      也是一个轻量级的开发框架
2.为什么要学Spring
    1.方便解耦,简化了开发
       1）Spring其实就一个很大的一个工厂，可以将所有的对象
         进行创建和依赖的关系来进维护，这些都可以交给Spring
         来进行处理
    2.AOP的编程的支持
       2)Spring提供了面向切面的方式进行编程,可以方便的实现对程序
       进行权限的拦截,运行的监控,事务的处理。。。。。
    3.声名式事务的支持
       1)只需要通过配置就可以完成对事务的管理,无需进手动的编程
       2)如之前JDBC执行的事务
    4.方便进行测试程序
      1)Spring还支持对JUNIT的测试,我们可以通过注解的方式来进行测试程序
    5.便于集成各种优秀的框架
      1)Spring排斥各种优秀的开源框架
      2)Spring对JavaEE开发中非常难用的API（JDBC）,都进行了一系列的封装
         那么就让API降低了难度
    6.Spring 还一占式
       1)可以进行Spring家族的框架进行开发整个程序
         不需要他任何的第三方的框架
3.spring jar包的下载
   https://spring.io/projects/spring-framework#learn
    建议:初学者不要使用最新的,容易版本不匹配(和其他框架)
4.HelloWord
   1)导入jar包
         com.springsource.org.apache.commons.logging-1.1.1.jar
         com.springsource.org.apache.log4j-1.2.15.jar
         hamcrest-core-1.3.jar
         junit-4.12.jar
         spring-beans-5.0.8.RELEASE.jar
         spring-context-5.0.8.RELEASE.jar
         spring-core-5.0.8.RELEASE.jar
         spring-expression-5.0.8.RELEASE.jar
    2)创建对象(实体类 必须要有对应get  set 方法)
    3)再src目录下进行创建applicationContext.xml
    4)在applicationContext.xml中进行注入对应的容器
                <!--注册对应的容易
                  比如我们之前new Users()来进行创建对象，那么现在就不
                   用，之间交Spring来进行处理
                -->
                <bean name="users" class="com.bj.spring.pojo.Users"></bean>
    5)进行测试
            @org.junit.Test
                  public   void test(){
                      //1.创建容器对象的
                      ClassPathXmlApplicationContext context =
                              new ClassPathXmlApplicationContext("applicationContext.xml");
                            //从容器中获取对象
                      Users users = (Users) context.getBean("users");

                      System.out.println(users);
                  }
 6.spring与Log4j的集成
     1）加入对应的jar包
        com.springsource.org.apache.log4j-1.2.15.jar
     2）在SRC目录下进行创建 log4j.properties


