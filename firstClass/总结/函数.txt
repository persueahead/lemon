函数
	1、函数概述
		定义：为了提高代码的复用性，可以将其定义成一个单独的功能，该功能的体现就是java中的函数（方法）。
	2、函数的定义
		格式：
			修饰符  返回值类型/void 函数名(参数类型  形参参数1,参数类型  形参参数2,参数类型  形参参数3....){
				执行语句
				return 返回值;
			}
	   注意：如果函数的返回值类型是void,return 语句可以不写，系统会帮你自动添加上;	
	3、函数的执行
		3.1 在同一个类中，直接使用  函数名() 或者 方法名()    ,也可以使用类名.函数名()
			比如: sum(3,4) 执行本类函数可省略类名   Demo2.sum(3,4) 
		3.2 不在同一个类中，并且在同一包，直接使用类名.函数名();
		 	比如：Demo2.sum(3,4) 
		3.3 不在同一个类中，并且不在同一包中，需要导入包：import com.Demo2; 在使用类名。函数名()
				 		也可以直接写完全路径com.Demo2.sum(3,4) ;
	    3.4 函数执行传参
	    	传入的参数个数、类型、顺序需要和方法或者函数保持一致，多传，少传都不行 	
	    3.5 形参和实参
	    	形参 （形式参数）：定义方法声明的参数变量
	    	实参（实际的参数） ：执行方法/函数时传递给形参的实际参数值  
	    3.6 函数的返回值
	    	返回类型为int...：定义一个返回类型变量保存方法的返回值
	    	返回类型为：void ,无法获取返回值
	    				
	    			 		
	4、函数的签名
		概念：函数的名称加上参数列表称为函数签名。其中参数列表包括(参数个数\每个参数类型、参数的顺序)
		意义：让编译器来判断2个方法是否是同一个方法，如果是同一个则不允许定义
			a.2个函数的函数名不一样，则一定不是相同方法
			b.2个函数名一样，但是参数列表不一样，不是相同函数
			c.2个函数的函数名和参数列表一样，但是修饰符或返回值类型不一样，还是相同函数
	5、函数的重载和应用
		重载(Overload)概念：如果一个类中2个或者2个以上的方法/函数名一样，但是参数列表不一样，则称为这几个方法为重载方法/函数
		注意：参数的列表不一样,不包括参数的名称
		重载的作用：
			让相同的函数名具有不同的功能，实现一种多态（同一函数，多种形态）效应
			   传入1个参数，具有A功能
			   传入2个参数，具有B功能
			   传入3个参数，具有C功能
		好处：
			减少记忆成本	   
	
	6、递归的应用
		概念：函数/方法调用函数/方法本身
		public static int f1(int x){
			if(x==1) return 1;
			
			return x*f1(x-1);
		}
	
		递归和循环的区别：
			
	
	
	
	
	
	
	
	
	推荐书籍：
		重构-改善既有代码的设计
		java编程思想
		Java与模式
	