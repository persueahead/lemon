一、this用法
	this:代表对象的引用
	用法：
		1.可以获取本类中成员变量:this.属性名
		2.可以通过构造函数调用构造函数,this(参数列表)，这句代码必须放在构造函数的第一行
		3.可以调用本类中成员函数，这时候this可以省略不写 :this.方法名(参数列表)
	注意：
		1.this在构造函数调用构造函数的时候只能放在第一行
		2.this在构造函数调用构造函数的时候只能调用一个，想多次调用可以嵌套调用
		3.this不能在static修饰符的方法中使用,静态方法里面只能访问静态的变量和静态的方法
二、类与类之间的关系
	继承关系  is-a
		一般表示类与类（或者接口与接口）之间的父子关系
	依赖关系  uses-a
		表示一个类依赖于另一个类的定义，一类的方法操作了另一个类的对象。
		一个人（Driver）可以开车(Car)
		依赖关系在Java中体现为局部变量、方法的形参或者对静态方法的调用
	聚合关系  has-a 
		聚合是整体和个体之间的关系，意味这类A 的对象包含类B的对象，整体和个体可以分离，
		他们具有各自的生命周期，个体可以属于多个对象共享。
		在Java中聚合关系一般使用成员变量来实现
三、继承
	1.继承的结构体：
		权限修饰符  class  子类  extends 父类｛
		
		｝	
	2.子类继承父类的注意点：
		2.1 子类可以继承父类中属性和方法
		2.2 所有私有的成员（变量和方法）不能被继承,private修饰的	
		2.3 构造函数不能被继承
	3.继承的特点
		3.1 描述类之间的关系 ，只有有继承关系  is-a
		3.2 降低类之间的重读代码
		3.3java中类只能单继承，只能有一个直接的父类
		3.4 如果一个类没有继承其它的类，默认继承Object
四、super 关键字

	介绍：super关键字指的父类对象，只能在继承关系的子类中使用
	用法：
		1.可以在子类中调用父类的属性，私有的除外  super.属性名 如果子类中有同名的属性，
		这个时候super不能省略
		2.可以在子类中获取父类的方法，私有的除外 ，super.方法名()
		3.可以通过子类的构造函数调用父类的构造函数 super(参数列表)
	注意：
		1.通过子类的构造函数会默认调用父类的无参数的构造函数,如果没无参数的构造函数，子类会报错s
		2.super在子类的构造函数调用父类的构造函数的时候，只能调用一次，并且放在第一行
		3.super和this不能同时使用，因为都放在第一行
		4.super不能在静态方法中使用

五、super和this的区别
	super:代表父类的引用
	this:代表对象的引用(谁调用就代表谁)
	使用场景：
		1.在继承关系的子类中使用，通过在子类中使用super调用父类中的属性和方法以及构造方法
		2.this本类中使用
	区别：
		成员变量：
			this.变量名  -- 本类中
			super.变量名-- 父类中的属性
		成员方法
			this.方法名（参数列表） -- 本类中
			super.方法名（参数列表） -- 父类中
		构造函数
			this()  --本类中的构造函数
			super() -- 调用父类中的构造函数			

六、重写
	在继承的关系中，子类可以定义和父类具有相同名称并且参数列表一致的函数。这种函数的体现就称为重写.
	有被称之为覆盖.
	前提条件：必须要有继承关系
	特点：
		1.如果子类重写了父类的函数，那么子类对象如果调用该函数，一定是调用的子类重写后的函数
		2.可以增强父类的方法
	细节：
		1.函数名称必须相同
		2.函数的参数列表必须相同
		3.子类重写父类的函数的时候，子类函数权限必须大于或等于父类的权限
	
	重写和重载的区别
		前提条件：
			重写：继承关系中，子类里面重写父类的方法
			重载：需要在同一个类中
		特点：
			重写：函数名相同   参数列表相同             和权限修饰符有关系   与返回值有关系必须相同
			重载：函数名相同  参数列表不同（个数不同、顺序不同、类型不同）	 权限修饰符、返回值无关  
			
			
七、权限修饰符
	作用：用于控制被修饰的变量、方法、类的可见范围
	                                               本类中       同包中          不同包子类         不同包的其它类
	private 私有的                   可以        不可以          不可以                   不可以
	默认的                                       可以         可以             不可以                   不可以
	protected 保护的              可以         可以              可以                      不可以
	public 公共的                      可以         可以              可以                     可以
	
	private:权限中最小的一个
		可以用来修饰属性、方法。不能修饰类（不考虑内部类）
		总结：在哪个类中定义只能在哪个类中使用，范围是本类中
	默认的（default） ：什么都不加
		可以用来修饰类、属性、方法
		默认的权限是同包权限，在同一个包中的类可以访问
		总结：在同一个包中可以被调用，范围是本包
	protected:受保护的
		可以用来修饰属性、方法  不能修饰类（不考虑内部类）
		如果是同包中可以任意访问，不同包中，只能在他们的子类中访问
		总结：比默认的权限范围大一点，能在不同的包中进行访问，通过子类调用
	public:公共的
		可以用来修饰类、属性、方法、构造函数
		是Java中权限最大的一个，不管同包不同包中都可以被任意的一个类调用
			
			
			
			



		
		