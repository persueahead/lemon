一、接口(重要)
	USB接口，扩展电脑的功能
	Java中的接口，扩展类的功能
	接口的结构体：
	权限修饰符  interface 接口名｛
		变量：都是常量 默认的是静态常量 public static final 修饰
		方法：默认全部是抽象方法  public abstract
	｝
	
	接口总结:
		1.接口里只能包含静态的常量，不能有普通成员变量
		2.接口里面的方法只能是抽象方法
		3.接口是一个特殊的抽象类,没有构造函数，不能被实例化
	类实现接口：
		修饰符 class  类名   implments 接口名称1,接口名称2{
		
		}	
	注意点：
		1.接口和类之间是实现的关系	implments,可以同时实现多个接口，接口之间使用逗号隔开
		2.Java中类不允许多继承，但是接口可以继承多个接口
		3.如果通过类不想重写接口中未实现的方法，可以把类定义为抽象类
		4.因为接口有存在抽象方法，并且没有构造函数，不能通过new关键字创建对象
		5.接口可以利用它实现的类进行向上转型
	接口的应用：
		对子类而言，除了实现接口外，还可以继承类，但是子类只能继承一个父类，Java类是单继承
		权限修饰符  class 类名  extends 父类  implements 接口1，接口2.....{
		}	
二、接口和抽象类的区别。（面试或笔试）(重要)
	定义的关键字：
		接口 ：interface
		抽象类：abstract  class
	组成的结构体：
		抽象类：常量 成员变量  抽象方法 成员方法（普通函数）  构造方法（构造函数）
		接口：常量  抽象方法
	权限：
		抽象类：可以使用各种权限
		接口：只能public 
	关系：
		抽象类：	
			一个抽象类可以实现多个接口，通过抽象类或类去继承 只能继承一个抽象类
		接口：
			可以通过接口继承接口，可以多继承
			可以通过类实现接口，可以同时实现多个接口				


三、内部类(了解)
	java 中特殊的语句，在类的内部定义的类
	作用：
		可以在一定的程度减少代码量
	缺点：
		语法不容易理解，可读性差
	分类：
		成员内部类  局部内部类 匿名内部类  静态内部类
	1.成员内部类
		在类的内部定义的类
	注意：
		1.1 成员内部类可以直接访问外部类的成员变量（包含私有的变量）
		1.2 成员内部类的实例化：
			先实例化外部类 ：外部类  外部类引用名  = new  外部类();
			后实例化内部类 ：内部类  内部类引用名 = 外部类引用名.new 内部类();			
			
			简化：内部类 内部类引用名  = new  外部类().new 内部类（）
			其它类访问：
				外部类.内部类 内部类引用名  = new  外部类().new 内部类();
		1.3 如果内部类和外部类属性相同，调用方式：外部类名.this.属性名
		1.4 如果内部类和外部类方法相同，外部类名.this.方法名();		
	2.局部内部类
		在方法内部定义类
	  作用范围：
	  	局部内部类只能在方法中使用
	 
	 3.匿名内部类
	 	没有名字的内部类
	 作用：
	 	简化内部类的书写
	前提条件： 必须继承一个父类或者实现接口s
	结构：
		new  父类名称或者接口名称(){
			
			//重写父类方法
		
		}.方法();
	
	图形化界面 事件监听 使用比较多
	注意：
		使用匿名内部类的时候，如果调用的匿名内部类有2个以上函数，可以定义变量
			 		
	 	




		