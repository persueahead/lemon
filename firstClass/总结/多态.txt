1. 面向对象-多态
	什么是多态：同一函数，多种形态。同一个事物具有不同的体现形式。
	父亲  儿子  丈夫  职员
	作用：
		消除类之间的耦合关系
	多态存在的条件：
		1.要有继承
		2.要有重写
		3.父类的引用指向子类的对象	
	分类：
		1.静态多态
			编译时候多态:程序在编译的时候，系统技能决定调用哪个函数，重载 ，静态多态和继承没有必然关系
		2.动态多态	
			运行时候多态，重写，在运行的时候决定调用哪个方法
	多态成员访问的特点：
		1、成员变量
			编译时看左边，运行时看左边
		2.成员方法
			编译的时候看左边，运行的时候看右边		
		3.静态方法
			编译的时候看左边（父类）,运行时候看左边		
		4.构造函数
			创建子类对象的时候，访问的是父类的构造函数	
	向上转型的基础：
		1.父类的引用执行子类的实例，调用的函数为重写后的内容
		2.不能使用子类特有的功能		
	解耦，提高代码扩展性，但是只能使用父类中的引用	