<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.department.manager.mapper.ManagerMapper">
    <resultMap id="BaseResultMap" type="com.department.manager.domain.Manager">
        <id column="manager_id" property="managerId" jdbcType="INTEGER"/>
        <result column="manager_name" property="managerName" jdbcType="VARCHAR"/>
        <result column="manager_password" property="managerPassword" jdbcType="VARCHAR"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        manager_id, manager_name, manager_password, role_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.department.manager.domain.ManagerExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from manager
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from manager
        where manager_id = #{managerId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from manager
        where manager_id = #{managerId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.department.manager.domain.ManagerExample">
        delete from manager
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.department.manager.domain.Manager">
        insert into manager (manager_id, manager_name, manager_password,
                             role_id)
        values (#{managerId,jdbcType=INTEGER}, #{managerName,jdbcType=VARCHAR}, #{managerPassword,jdbcType=VARCHAR},
                #{roleId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.department.manager.domain.Manager">
        insert into manager
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="managerId != null">
                manager_id,
            </if>
            <if test="managerName != null">
                manager_name,
            </if>
            <if test="managerPassword != null">
                manager_password,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="managerId != null">
                #{managerId,jdbcType=INTEGER},
            </if>
            <if test="managerName != null">
                #{managerName,jdbcType=VARCHAR},
            </if>
            <if test="managerPassword != null">
                #{managerPassword,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.department.manager.domain.ManagerExample"
            resultType="java.lang.Integer">
        select count(*) from manager
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectRoleByManagerId" resultMap="com.department.manager.mapper.RoleMapper.BaseResultMap">

        SELECT r.role_id, r.role_name
        FROM role r
                 LEFT JOIN manager m
                           ON m.role_id = r.role_id
        WHERE m.manager_id = #{managerId}

    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update manager
        <set>
            <if test="record.managerId != null">
                manager_id = #{record.managerId,jdbcType=INTEGER},
            </if>
            <if test="record.managerName != null">
                manager_name = #{record.managerName,jdbcType=VARCHAR},
            </if>
            <if test="record.managerPassword != null">
                manager_password = #{record.managerPassword,jdbcType=VARCHAR},
            </if>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update manager
        set manager_id = #{record.managerId,jdbcType=INTEGER},
        manager_name = #{record.managerName,jdbcType=VARCHAR},
        manager_password = #{record.managerPassword,jdbcType=VARCHAR},
        role_id = #{record.roleId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.department.manager.domain.Manager">
        update manager
        <set>
            <if test="managerName != null">
                manager_name = #{managerName,jdbcType=VARCHAR},
            </if>
            <if test="managerPassword != null">
                manager_password = #{managerPassword,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where manager_id = #{managerId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.department.manager.domain.Manager">
        update manager
        set manager_name     = #{managerName,jdbcType=VARCHAR},
            manager_password = #{managerPassword,jdbcType=VARCHAR},
            role_id          = #{roleId,jdbcType=INTEGER}
        where manager_id = #{managerId,jdbcType=INTEGER}
    </update>
</mapper>