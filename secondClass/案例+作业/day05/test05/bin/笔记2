1:IO的描述
   1-1:在程序读和写(数据)的时候的过程就是IO流
		1-2: 输入和输出
				给内存中读取数据的时候这个过程就是输入流(input....)	
				从内存中进行向外写数据的这个过程就是输出流(output....)
		1-2：长用的标准流
					System.out.就是OutputStream的类型
					System.in.就是input..的类型

2:File类
	1-2-1：File 进行新建,删除，重命名文件或者目录
				1-2-1-1新建:
					     	File f=  new File("D:\\1234\\1234444");	
								//需要进行判断"D:\\1234"是否存在
						     	if(!f.exists()) {//测试此抽象路径名表示的文件或目录是否存在。
						     		f.mkdirs();
						     		System.out.println("------------");
						     	}
						     	
				1-2-1-2创建文件  			//文件
						     	File f1=  new File(f,"xxx.txt");	
								//需要进行判断"D:\\1234"是否存在
						     	if(!f1.exists()) {//测试此抽象路径名表示的文件或目录是否存在。
						     		f1.createNewFile();//进行新建文件
						     		System.out.println("------------");
						     	}
				1-2-1-3删除文件
							//删除文件
								public static void tets038() {
									File  f=new File("D:\\1234\\1234444\\xxx.txt");
									System.out.println(f.delete());
								}	
				1-2-1-4删除空文件夹				//删除空文件夹
				public static void tets039() {
					File  f=new File("D:\\1234\\1234444");
					System.out.println(f.delete());
				}						     	
						
				1-2-1-5修改文件夹					//修改文件夹
	 					注意:如路径相同,就是改名
	 						不路径不同就是进行改名并进行剪切
						public static void tets041() {
									File  f1=new File("D:\\1234\\新建文件夹\\修改之222222后.txt");
									File  f2=new File("D:\\1234\\修改之后.txt");
									System.out.println(f2.renameTo(f1));
						}	
						public static void tets040() {
							File  f1=new File("D:\\1234\\新建文件夹\\新建文本文档.txt");
							File  f2=new File("D:\\1234\\新建文件夹\\修改之后.txt");
							System.out.println(f1.renameTo(f2));
						}
				1-2-1-6：进行判断常用方法
						1)是否是一个文件
									File  f1=new File("D:\\1234\\新建文件夹");
									System.out.println(f1.isDirectory());
						2)是否是一个文件
									File  f2=new File("D:\\1234\\新建文件夹\\修改之222222后.txt");
										System.out.println(f2.isFile());
						3)是否隐藏文件
											File  f2=new File("D:\\1234\\新建文件夹\\修改之222222后.txt");
											System.out.println(f2.isHidden());
				1-2-1-7获取文件夹名:
							//获取文件夹名
								//获取文件的名称
								public static void tets044() {
									File  f1=new File("D:\\1234");
									File[] st=f1.listFiles();
									for (File file : st) {//获取的是File对象
										System.out.println(file);
									}
									System.out.println("绝对路径+"+f1.getAbsolutePath());
									System.out.println("径名转换为一个路径名字符串。+"+f1.getPath());
									System.out.println("获取名称+"+f1.getName());
									System.out.println("长度+"+f1.length());
									System.out.println("时间"+f1.lastModified());
								}
								
													     	
	1-2-2：File 不能进行访问文件本身的内容
	1-2-3:如需要进行访问文件的内容的时候，就需要使用输入和输出流
	  如：new PrintStream(file)

3：流的分类
	 3-1 按照流的方向来进行分类
	 		输入和输出流
	 3-2 按照操作类型分类
	 		字节流
	 			字节流可以进行操作任何数据
	 			因为计算机中的任何数据都是按照字节来进行存储的
	 			  InputStream
	 			  OutPutStream
	 		字符流
	 			字符流只能进行操作纯字符的数据，这种方式来进行操作字符比较方便
	 				Reader
	 				Writer
	 		
	 				
	 		
		
		
		